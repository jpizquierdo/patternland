// This file is auto-generated by @hey-api/openapi-ts

export type Body_login_login_access_token = {
  grant_type?: string | null
  username: string
  password: string
  scope?: string
  client_id?: string | null
  client_secret?: string | null
}

export type Body_patterns_upload_files = {
  id: string
  pattern_a0_file?: (Blob | File) | null
  pattern_a0_sa_file?: (Blob | File) | null
  pattern_a0_sa_projector_file?: (Blob | File) | null
  pattern_a0_projector_file?: (Blob | File) | null
  pattern_a4_file?: (Blob | File) | null
  pattern_a4_sa_file?: (Blob | File) | null
  pattern_instructables_file?: (Blob | File) | null
  icon?: (Blob | File) | null
}

export type HTTPValidationError = {
  detail?: Array<ValidationError>
}

export type ItemCreate = {
  title: string
  description?: string | null
}

export type ItemPublic = {
  title: string
  description?: string | null
  id: string
  owner_id: string
}

export type ItemsPublic = {
  data: Array<ItemPublic>
  count: number
}

export type ItemUpdate = {
  title?: string | null
  description?: string | null
}

export type Message = {
  message: string
}

export type NewPassword = {
  token: string
  new_password: string
}

export type PatternCreate = {
  title: string
  description?: string | null
  brand: "Fibre Mood" | "Other" | "Seamwork"
  version: "Paper" | "Digital"
  pattern_url?: string | null
  for_who: "Baby" | "Kids" | "Men" | "Women" | "Pets"
  category?:
    | "Accessories"
    | "Bags"
    | "Blazers"
    | "Bodywarmer"
    | "Cardigans"
    | "Coats"
    | "DIY"
    | "Dresses"
    | "Hoodie"
    | "Jackets"
    | "Jumpers"
    | "Jumpsuits"
    | "Overalls"
    | "Overshirt"
    | "Pullovers"
    | "Shirts"
    | "Shorts"
    | "Skirts"
    | "Sweaters"
    | "Swimwear"
    | "T-shirts"
    | "Tops"
    | "Trousers"
    | null
  difficulty: number
  fabric?: string | null
  fabric_amount?: number | null
}

export type brand = "Fibre Mood" | "Other" | "Seamwork"

export type version = "Paper" | "Digital"

export type for_who = "Baby" | "Kids" | "Men" | "Women" | "Pets"

export type PatternPublic = {
  title: string
  description?: string | null
  brand: "Fibre Mood" | "Other" | "Seamwork"
  version: "Paper" | "Digital"
  pattern_url?: string | null
  for_who: "Baby" | "Kids" | "Men" | "Women" | "Pets"
  category?:
    | "Accessories"
    | "Bags"
    | "Blazers"
    | "Bodywarmer"
    | "Cardigans"
    | "Coats"
    | "DIY"
    | "Dresses"
    | "Hoodie"
    | "Jackets"
    | "Jumpers"
    | "Jumpsuits"
    | "Overalls"
    | "Overshirt"
    | "Pullovers"
    | "Shirts"
    | "Shorts"
    | "Skirts"
    | "Sweaters"
    | "Swimwear"
    | "T-shirts"
    | "Tops"
    | "Trousers"
    | null
  difficulty: number
  fabric?: string | null
  fabric_amount?: number | null
  id: string
  owner_id: string
  pattern_a0_file_id: string | null
  pattern_a0_sa_file_id: string | null
  pattern_a0_sa_projector_file_id: string | null
  pattern_a0_projector_file_id: string | null
  pattern_a4_file_id: string | null
  pattern_a4_sa_file_id: string | null
  pattern_instructables_file_id: string | null
  icon?: string | null
}

export type PatternsPublic = {
  data: Array<PatternPublic>
  count: number
}

export type PatternUpdate = {
  title?: string | null
  description?: string | null
  brand?: "Fibre Mood" | "Other" | "Seamwork" | null
  version?: "Paper" | "Digital" | null
  pattern_url?: string | null
  for_who?: "Baby" | "Kids" | "Men" | "Women" | "Pets" | null
  category?:
    | "Accessories"
    | "Bags"
    | "Blazers"
    | "Bodywarmer"
    | "Cardigans"
    | "Coats"
    | "DIY"
    | "Dresses"
    | "Hoodie"
    | "Jackets"
    | "Jumpers"
    | "Jumpsuits"
    | "Overalls"
    | "Overshirt"
    | "Pullovers"
    | "Shirts"
    | "Shorts"
    | "Skirts"
    | "Sweaters"
    | "Swimwear"
    | "T-shirts"
    | "Tops"
    | "Trousers"
    | null
  difficulty?: number | null
  fabric?: string | null
  fabric_amount?: number | null
}

export type PrivateUserCreate = {
  email: string
  password: string
  full_name: string
  is_verified?: boolean
}

export type Token = {
  access_token: string
  token_type?: string
}

export type UpdatePassword = {
  current_password: string
  new_password: string
}

export type UserCreate = {
  email: string
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  password: string
}

export type UserPublic = {
  email: string
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  id: string
}

export type UserRegister = {
  email: string
  password: string
  full_name?: string | null
}

export type UsersPublic = {
  data: Array<UserPublic>
  count: number
}

export type UserUpdate = {
  email?: string | null
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  password?: string | null
}

export type UserUpdateMe = {
  full_name?: string | null
  email?: string | null
}

export type ValidationError = {
  loc: Array<string | number>
  msg: string
  type: string
}

export type ItemsReadItemsData = {
  limit?: number
  skip?: number
}

export type ItemsReadItemsResponse = ItemsPublic

export type ItemsCreateItemData = {
  requestBody: ItemCreate
}

export type ItemsCreateItemResponse = ItemPublic

export type ItemsReadItemData = {
  id: string
}

export type ItemsReadItemResponse = ItemPublic

export type ItemsUpdateItemData = {
  id: string
  requestBody: ItemUpdate
}

export type ItemsUpdateItemResponse = ItemPublic

export type ItemsDeleteItemData = {
  id: string
}

export type ItemsDeleteItemResponse = Message

export type LoginLoginAccessTokenData = {
  formData: Body_login_login_access_token
}

export type LoginLoginAccessTokenResponse = Token

export type LoginTestTokenResponse = UserPublic

export type LoginRecoverPasswordData = {
  email: string
}

export type LoginRecoverPasswordResponse = Message

export type LoginResetPasswordData = {
  requestBody: NewPassword
}

export type LoginResetPasswordResponse = Message

export type LoginRecoverPasswordHtmlContentData = {
  email: string
}

export type LoginRecoverPasswordHtmlContentResponse = string

export type PatternsUploadFilesData = {
  formData: Body_patterns_upload_files
}

export type PatternsUploadFilesResponse = unknown

export type PatternsDownloadFileData = {
  filename: string
}

export type PatternsDownloadFileResponse = unknown

export type PatternsReadPatternsData = {
  limit?: number
  selfPatterns?: boolean
  skip?: number
}

export type PatternsReadPatternsResponse = PatternsPublic

export type PatternsCreatePatternData = {
  requestBody: PatternCreate
}

export type PatternsCreatePatternResponse = PatternPublic

export type PatternsReadPatternData = {
  id: string
}

export type PatternsReadPatternResponse = PatternPublic

export type PatternsUpdatePatternData = {
  id: string
  requestBody: PatternUpdate
}

export type PatternsUpdatePatternResponse = PatternPublic

export type PatternsDeletePatternData = {
  id: string
}

export type PatternsDeletePatternResponse = Message

export type PrivateCreateUserData = {
  requestBody: PrivateUserCreate
}

export type PrivateCreateUserResponse = UserPublic

export type UsersReadUsersData = {
  limit?: number
  skip?: number
}

export type UsersReadUsersResponse = UsersPublic

export type UsersCreateUserData = {
  requestBody: UserCreate
}

export type UsersCreateUserResponse = UserPublic

export type UsersReadUserMeResponse = UserPublic

export type UsersDeleteUserMeResponse = Message

export type UsersUpdateUserMeData = {
  requestBody: UserUpdateMe
}

export type UsersUpdateUserMeResponse = UserPublic

export type UsersUpdatePasswordMeData = {
  requestBody: UpdatePassword
}

export type UsersUpdatePasswordMeResponse = Message

export type UsersRegisterUserData = {
  requestBody: UserRegister
}

export type UsersRegisterUserResponse = UserPublic

export type UsersReadUserByIdData = {
  userId: string
}

export type UsersReadUserByIdResponse = UserPublic

export type UsersUpdateUserData = {
  requestBody: UserUpdate
  userId: string
}

export type UsersUpdateUserResponse = UserPublic

export type UsersDeleteUserData = {
  userId: string
}

export type UsersDeleteUserResponse = Message

export type UtilsTestEmailData = {
  emailTo: string
}

export type UtilsTestEmailResponse = Message

export type UtilsHealthCheckResponse = boolean
