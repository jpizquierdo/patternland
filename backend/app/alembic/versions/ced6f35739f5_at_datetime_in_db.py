"""at datetime in DB

Revision ID: ced6f35739f5
Revises: a10fa64d0a0d
Create Date: 2025-04-25 18:37:48.638766

"""

from typing import Sequence, Union
from datetime import datetime, timezone
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.sql import text

# revision identifiers, used by Alembic.
revision: str = "ced6f35739f5"
down_revision: Union[str, None] = "a10fa64d0a0d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "pattern", sa.Column("created_at", sa.DateTime(timezone=True), nullable=True)
    )
    op.add_column(
        "pattern", sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True)
    )
    op.alter_column(
        "pattern",
        "description",
        existing_type=sa.VARCHAR(length=255),
        type_=sqlmodel.sql.sqltypes.AutoString(length=1023),
        existing_nullable=True,
    )
    # Set the current date for existing rows
    current_time = datetime.now(timezone.utc)
    op.execute(
        text(
            f"UPDATE pattern SET created_at = '{current_time}', updated_at = '{current_time}'"
        )
    )
    op.alter_column("pattern", "created_at", nullable=False)
    op.alter_column("pattern", "updated_at", nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "pattern",
        "description",
        existing_type=sqlmodel.sql.sqltypes.AutoString(length=1023),
        type_=sa.VARCHAR(length=255),
        existing_nullable=True,
    )
    op.drop_column("pattern", "updated_at")
    op.drop_column("pattern", "created_at")
    # ### end Alembic commands ###
